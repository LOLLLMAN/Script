local juju = juju
local set_ragebot_target = juju and juju["set_ragebot_target"]
local players_service = cloneref(game:GetService("Players"))
local run_service = cloneref(game:GetService("RunService"))
local user_input_service = game:GetService("UserInputService")

-- UI Overlay Setup
local screen_gui = Instance.new("ScreenGui")
screen_gui.IgnoreGuiInset = true 

local frame = Instance.new("Frame")
local title = Instance.new("TextLabel")
local health_label = Instance.new("TextLabel")

screen_gui.Parent = game:GetService("CoreGui")

frame.Parent = screen_gui
frame.Size = UDim2.new(1, 0, 1, 0)
frame.BackgroundColor3 = Color3.new(0, 0, 0)
frame.Visible = false

title.Parent = frame
title.Size = UDim2.new(1, 0, 0.2, 0)
title.BackgroundTransparency = 1
title.TextScaled = true
title.TextColor3 = Color3.new(1, 1, 1)

health_label.Parent = frame
health_label.Size = UDim2.new(1, 0, 0.1, 0)
health_label.Position = UDim2.new(0, 0, 0.2, 0)
health_label.BackgroundTransparency = 1
health_label.TextScaled = true
health_label.TextColor3 = Color3.new(1, 1, 1)

-- Function to Find Player by Display Name
local function find_player(display_name)
    for _, player in ipairs(players_service:GetPlayers()) do
        if player.DisplayName == display_name then
            return player
        end
    end
    return nil
end

-- Function to Set Ragebot Target Dynamically
local function set_target()
    if not set_ragebot_target then
        return print("Error: set_ragebot_target function missing!")
    end
    
    local target_player = find_player(_G.RagebotConfig.target)
    
    if target_player then
        set_ragebot_target(target_player)
        print("Target set to: " .. target_player.DisplayName)
    else
        print("Target not found: " .. _G.RagebotConfig.target)
    end
end

-- Command Listener for Authorized Users
local function listen_for_commands()
    local function chat_listener(player)
        player.Chatted:Connect(function(message)
            local args = message:lower():gsub("%s+", ""):split(" ")

            -- Kill Switch Command
            if args[1] == ".stop" and table.find(_G.RagebotConfig.authorized_users, player.Name) then
                set_ragebot_target(nil)
                screen_gui:Destroy()
                print("Script stopped by " .. player.Name)
            end

            -- Change Target Command
            if args[1] == ".target" and args[2] and table.find(_G.RagebotConfig.authorized_users, player.Name) then
                _G.RagebotConfig.target = args[2]
                set_target()
                print("Target changed by " .. player.Name .. " to " .. args[2])
            end
        end)
    end

    -- Connect existing players
    for _, player in ipairs(players_service:GetPlayers()) do
        chat_listener(player)
    end

    -- Connect new players
    players_service.PlayerAdded:Connect(chat_listener)
end

-- Initialize
listen_for_commands()
set_target()

-- Cleanup
juju["on_unload"](function()
    set_ragebot_target(nil)
    screen_gui:Destroy()
    print("Ragebot script unloaded.")
end)
