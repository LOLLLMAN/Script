local juju = juju
local set_ragebot_target = juju["set_ragebot_target"]
local players_service = cloneref(game:GetService("Players"))
local run_service = cloneref(game:GetService("RunService"))
local user_input_service = game:GetService("UserInputService")

-- >> UI Overlay Setup
local screen_gui = Instance.new("ScreenGui")
screen_gui.IgnoreGuiInset = true 

local frame = Instance.new("Frame")
local title = Instance.new("TextLabel")
local health_label = Instance.new("TextLabel")

screen_gui.Parent = game:GetService("CoreGui")

frame.Parent = screen_gui
frame.Size = UDim2.new(1, 0, 1, 0)
frame.BackgroundColor3 = Color3.new(0, 0, 0)
frame.Visible = false -- Hidden initially

title.Parent = frame
title.Size = UDim2.new(1, 0, 0.2, 0)
title.BackgroundTransparency = 1
title.TextScaled = true
title.TextColor3 = Color3.new(1, 1, 1)

health_label.Parent = frame
health_label.Size = UDim2.new(1, 0, 0.1, 0)
health_label.Position = UDim2.new(0, 0, 0.2, 0)
health_label.BackgroundTransparency = 1
health_label.TextScaled = true
health_label.TextColor3 = Color3.new(1, 1, 1)

-- >> Optimization Function
local function do_gfx()
    if not setfpscap then return end

    user_input_service.WindowFocusReleased:Connect(function()
        run_service:Set3dRenderingEnabled(false)
        setfpscap(25)
    end)

    user_input_service.WindowFocused:Connect(function()
        run_service:Set3dRenderingEnabled(true)
        setfpscap(360)
    end)

    task.wait(1)

    for _, v in pairs(workspace:GetDescendants()) do
        if v:IsA("Part") or v:IsA("SpawnLocation") or v:IsA("WedgePart") or v:IsA("Terrain") or v:IsA("MeshPart") then
            v.Material = Enum.Material.Plastic
        end
    end
end

-- >> Find Target by Display Name
local function find_player_by_display_name(display_name)
    for _, player in ipairs(players_service:GetPlayers()) do
        if player.DisplayName == display_name then
            return player
        end
    end
    return nil
end

local function set_target_by_display_name(display_name)
    local target_player = find_player_by_display_name(display_name)

    if target_player then
        set_ragebot_target(target_player)
        print("Ragebot target set to: " .. target_player.DisplayName .. " (" .. target_player.Name .. ")")
    else
        print("Target not found!")
    end
end

-- >> Health Tracking
local function update_health(target_player)
    if target_player.Character then
        local humanoid = target_player.Character:FindFirstChildOfClass("Humanoid")
        if humanoid then
            health_label.Text = "Health: " .. tostring(math.floor(humanoid.Health))
        else
            health_label.Text = "Health: N/A"
        end
    else
        health_label.Text = "Health: Dead"
    end
end

local function on_character_added(new_character, target_player)
    local humanoid = new_character:FindFirstChildOfClass("Humanoid")
    if humanoid then
        humanoid:GetPropertyChangedSignal("Health"):Connect(function()
            update_health(target_player)
        end)
        update_health(target_player)
    end
end

-- >> Chat Command Listener
local function chat_listener(player)
    player.Chatted:Connect(function(message)
        local args = message:lower():gsub("%s+", ""):split(" ")

        -- Kill Switch Command
        if args[1] == ".stop" and table.find(_G.Config.users, player.Name) then
            set_ragebot_target(nil)
            screen_gui:Destroy()
            run_service:Set3dRenderingEnabled(true)
            setfpscap(360)
            print("Authorized user " .. player.Name .. " stopped the script!")
        end

        -- Target Change Command
        if args[1] == ".target" and args[2] and table.find(_G.Config.users, player.Name) then
            set_target_by_display_name(args[2])
            print("Authorized user " .. player.Name .. " set target to " .. args[2])
        end
    end)
end

-- >> Connect Chat Listener for Existing Players
for _, player in ipairs(players_service:GetPlayers()) do
    chat_listener(player)
end

-- >> Connect Chat Listener for New Players
players_service.PlayerAdded:Connect(chat_listener)

-- >> Set Initial Target from Config
set_target_by_display_name(_G.Config.target_display_name)

-- >> Cleanup on Unload
juju["on_unload"](function()
    set_ragebot_target(nil)
    screen_gui:Destroy()
    print("Ragebot target selection script unloaded.")
end)
